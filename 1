# 1. 정렬 후 최대 최소를 도출하기

```c
#include <stdio.h>

void swap(int* cc, int* dd)
{
	int temp;
	
	temp = *cc;
	*cc = *dd;
	*dd = temp;
}

void point_array(int* arr, int size)
{
	int i = 0;
	
	for (i = 0; i < size; i++)
	{
		printf("%d", arr[i]);
	}
	printf("\n");
}

void bubble_sort(int* arr, int size)
{
	int i, j;
	
	for (i = 0; i < size - 1; i++)
	{
		for (j = 0; j < size - 1 - i; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				swap(&arr[j], &arr[j + 1]);
			}
			point_array(arr, size);
		}
	}
	printf("\n");
}

void sort_min_max(int* arr, int size, int* min, int* max)
{
	*max = arr[0];
	*min = arr[0];

	for (int i = 1; i < size; i++)
	{
		if (*max < arr[i])
		{
			*max = arr[i];
		}
		if (*min > arr[i])
		{
			*min = arr[i];
		}

	}
}

int main(void)
{
	int array[8] = { 1, 5, 4, 6, 8, 7, 2, 3 };
	int* p = array;
	int min = 0;
	int max = 0;

	printf("정렬 전: ");

	for (int i = 0; i < 8; i++)
	{
		printf("%d", array[i]);
	}
	printf("\n");

	bubble_sort(array, 8);

	sort_min_max(array, 8, &min, &max);

	printf("최대값은: %d\n", max);
	printf("최소값은: %d\n", min);
}
```

![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/1c6c3bf7-2bef-46c5-bae4-1e9a1331ddee/image.png)

# 2. **int형 변수를 선언하여 사용자에게 입력받은 후 해당 값을 2배로 바꿔주는 함수(반환 형태 : void)를 사용하여 입력받은 수의 3배를 출력하시오.**

```c
#define _CRT_SECURE_NO_WARNINGS_
#include <stdio.h>

void double_num(int num, int *double_number)
{
	*double_number = num * 2;
}

void triple_num(int num, int *triple_number)
{
	*triple_number = num * 3;
}

int main(void)
{
	int num = 0;
	int double_number = 0;
	int triple_number = 0;

	printf("수를 입력하시오: ");
	scanf_s("%d", &num);

	double_num(num, &double_number);
	triple_num(num, &triple_number);

	printf("입력받은 수의 두배는 %d 입니다\n\n", double_number);
	printf("입력받은 수의 세배는 %d 입니다\n", triple_number);
}
```

![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/9143f862-abc3-4c29-bb37-45457a671f93/image.png)

# 3. **숫자를 입력 받아 해당 숫자를 제곱으로 바꿔주는 함수를 만드세요. (반환 형태가 void이고, 포인터 사용)**

```c
#define _CRT_SECURE_NO_WARNINGS_
#include <stdio.h>

void square(int num, int * square_number)
{
	*square_number = num * num;
}

int main(void)
{
	int num = 0;
	int square_number = 0;

	printf("수를 입력하시오: ");
	scanf_s("%d", &num);

	square(num, &square_number);

	printf("입력받은 수의 제곱은 %d 입니다\n\n", square_number);
}
```

![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/86ca567a-f9af-45d7-9745-d4a948eee065/image.png)

# 4. **정수 숫자 5개를 입력 받아서입력 받은 역순으로 출력하도록 포인터를 사용하여 함수를 만드세요.**

```c
#define _CRT_SECURE_NO_WARNINGS_
#include <stdio.h>

void inverter(int* arr, int size)
{
	printf("입력받은 수의 역순: ");
	for (int i = size - 1; i >= 0; i--)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
}

int main(void)
{
	int arr[5] = { 0 };

	printf("수를 입력하시오: ");
	for (int i = 0; i < 5; ++i)
	{
		scanf_s("%d", &arr[i]);
	}

	inverter(arr, 5);

	return 0;
}

```

![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/d861d5e4-c441-4844-97e6-97c701a42501/image.png)
